<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	default-lazy-init="true">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/config/jdbc.properties</value>
			</list>
		</property>
	</bean>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="1" />
		<property name="maxActive" value="100" />
		<property name="minIdle" value="5" />
		<property name="maxWait" value="5000" />
		<property name="filters" value="config" />
		<property name="connectionProperties" value="config.decrypt=true" />
	</bean>

	<bean id="chongDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${chong.driverClassName}" />
		<property name="url" value="${chong.url}" />
		<property name="username" value="${chong.username}" />
		<property name="password" value="${chong.password}" />
		<property name="initialSize" value="1" />
		<property name="maxActive" value="100" />
		<property name="minIdle" value="5" />
		<property name="maxWait" value="5000" />
		<property name="filters" value="config" />
		<property name="connectionProperties" value="config.decrypt=true" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingLocations">
			<list>
				<value>classpath*:/com/jeecms/core/entity/hbm/*.hbm.xml</value>
				<value>classpath*:/com/jeecms/cms/entity/main/hbm/*.hbm.xml</value>
				<value>classpath*:/com/jeecms/cms/entity/assist/hbm/*.hbm.xml
				</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
				hibernate.show_sql=false
				hibernate.format_sql=false
				hibernate.query.substitutions=true 1, false 0
				hibernate.jdbc.batch_size=20
				hibernate.cache.use_query_cache=true
			</value>
		</property>
		<property name="entityInterceptor">
			<ref local="treeInterceptor" />
		</property>
		<property name="cacheProvider">
			<ref local="cacheProvider" />
		</property>
		<property name="lobHandler">
			<ref bean="lobHandler" />
		</property>
	</bean>
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"
		lazy-init="true" />

	<bean id="cacheProvider" class="com.jeecms.common.hibernate3.SpringEhCacheProvider">
		<property name="configLocation">
			<value>/WEB-INF/config/ehcache-hibernate.xml</value>
		</property>
		<property name="diskStoreLocation">
			<value>/WEB-INF/cache/hibernate</value>
		</property>
	</bean>
	<bean id="treeInterceptor" class="com.jeecms.common.hibernate3.TreeIntercptor" />
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<context:annotation-config />
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="cn.com.chanyue">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- MyBatis配置 -->
	<bean id="chongSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="chongDataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="cn.com.chanyue.entity" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:cn/com/chanyue/mapper/*Mapper.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.com.chanyue.dao" />
		<property name="annotationClass" value="cn.com.chanyue.dao.MyBatisRepository" />
		<property name="sqlSessionFactoryBeanName" value="chongSqlSessionFactory" />
	</bean>
</beans>